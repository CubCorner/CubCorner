<% if comment.visible_to?(CurrentUser.user) && comment.should_see?(CurrentUser.user) %>
  <article
    class="comment <%= "below-threshold" if comment.below_threshold? %>"
    id="comment-<%= comment.id %>"
    data-post-id="<%= comment.post_id %>"
    data-comment-id="<%= comment.id %>"
    data-score="<%= comment.score %>"
    data-creator="<%= comment.creator&.name.downcase %>"
    data-is-sticky="<%= comment.is_sticky %>"
    data-creator-id="<%= comment.creator_id %>"
    data-is-deleted="<%= comment.is_hidden? %>"
  >

    <div class="comment-avatar">
      <%= comment_avatar(comment.creator) %>
      <%= comment_level_string(comment.creator) %>
    </div>

    <div class="comment-info">
      <span class="comment-said">
        <%= link_to_user comment.creator %> said <%= link_to time_ago_in_words_tagged(comment.created_at), post_path(id: comment.post_id, anchor: "comment-#{comment.id}") %>
      </span>
      <%= comment_edited_notice(comment) %>
      <% if policy(comment).can_see_ip_addr? %>
        <span class="comment-ip"><%= link_to_ip comment.creator_ip_addr %></span>
      <% end %>
    </div>

    <div class="comment-body dtext-container">
      <%= format_text(comment.body, allow_color: comment.creator.is_trusted?) %>
      <%= render "application/warned_notice", record: comment %>
    </div>

    <% if policy(comment).update? %>
    <div class="comment-edit">
      <%= render "comments/partials/form", comment: comment %>
    </div>
    <% end %>

    <div class="comment-acts">
      <%= comment_vote_block(comment, @comment_votes[comment.id]) %>

      <% if defined?(post) && comment.can_reply?(CurrentUser.user) %>
        <li>
          <%= tag.a(href: (CurrentUser.user.is_member? ? nil : new_session_path), class: "comment-reply-link") do %>
            <%= tag.i(class: "fa-solid fa-reply") %> Reply
          <% end %>
        </li>
      <% end %>

      <% if policy(comment).any?(:edit?, :hide?, :unhide?) %>
        <li class="dot"></li>
      <% end %>

      <%= li_link_to_if(policy(comment).edit?, "Edit", edit_comment_path(comment.id), class: "comment-edit-link") %>
      <%= li_link_to_if(policy(comment).hide?, "Delete", "", class: "comment-delete-link") %>
      <%= li_link_to_if(policy(comment).unhide?, "Undelete", "", class: "comment-undelete-link") %>

      <li class="spacer"></li>

      <%= li_link_to_if(mark = policy(comment).warning?, "Mark", "", class: "comment-mark-link") %>
      <%= li_link_to_if(history = policy(EditHistory).index?, "History", edit_history_path(id: comment.id, type: "Comment"), class: "comment-edit-history-link") %>
      <%= li_link_to_if(vote = CommentVotePolicy.new(CurrentUser.user, comment).index?, "Votes", { controller: "comments/votes", search: { comment_id: comment.id } }, class: "comment-vote-history-link") %>
      <% if mark || history || vote %>
        <li class="dot"></li>
      <% end %>
      <%= li_link_to_if(policy(comment).destroy?, "Destroy", "", class: "comment-destroy-link") %>

      <% unless comment.is_sticky && TicketPolicy.new(CurrentUser.user, comment).create? %>
        <li>
          <%= link_to model_new_ticket_path(model: comment), class: "comment-report-link" do %>
            <%= tag.i(class: "far fa-flag fa-flip-horizontal") %> Report
          <% end %>
        </li>
      <% end %>
    </div>

    <% if policy(comment).warning? %>
      <div class="comment-mark">
        <%= render "user_warnable/buttons", model: comment %>
      </div>
    <% end %>

  </article>
<% end %>
