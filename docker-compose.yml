x-environment: &common-env
  PAWSMOVIN_HOSTNAME: http://localhost:${EXPOSED_SERVER_PORT:-3001}
  PAWSMOVIN_REDIS_URL: redis://redis
  PAWSMOVIN_OPENSEARCH_HOST: opensearch
  PAWSMOVIN_MEMCACHED_SERVERS: memcached
  PAWSMOVIN_IQDB_SERVER: http://iqdb:5588
  PAWSMOVIN_RECOMMENDER_SERVER: http://recommender:5000
  # Must be externally accessible
  PAWSMOVIN_REPORTS_SERVER: http://localhost:${EXPOSED_SERVER_PORT:-3001}/reports
  # Must be internally accessible
  PAWSMOVIN_REPORTS_SERVER_INTERNAL: http://reports:3000
  PAWSMOVIN_REPORTS_ENABLED: 1
  PAWSMOVIN_DISCORD_SITE: http://localhost:3003
  PAWSMOVIN_DISCORD_SECRET: super_secret_for_url_discord
  PAWSMOVIN_REPORT_KEY: super_secret_key_for_reports_signature
  # These are just development secrets, do not use them in production
  PAWSMOVIN_PROTECTED_FILE_SECRET: 6686a6413d90c43d5e82403ef271ec25d13cc24e3bfcdd094e73d1eff22a3567
  PAWSMOVIN_REPLACEMENT_FILE_SECRET: b35bc54cdc0d0436fc5867c7ef88f9b10a37ae20a06b37e67614fe60019d7bb1
  SECRET_TOKEN: 1c58518a891eff4520cadc59afa9e378a9325f1247544ff258096e497f095f45
  SESSION_SECRET_KEY: 44b4f44e9f253c406cbe727d403d500c1cecff943e4d2aea8f5447f28846fffe
  # Hide annoying output from libvips on corrupt files
  VIPS_WARNING: "0"
  DD_TRACE_STARTUP_LOGS: false

x-depends-on: &common-depends-on
  opensearch:
    condition: service_healthy
  memcached:
    condition: service_started
  postgres:
    condition: service_started
  redis:
    condition: service_started

services:
  pawsmovin:
    build:
      context: .
      args:
        HOST_UID: ${HOST_UID:-1000}
        HOST_GID: ${HOST_GID:-1000}
    user: ${DOCKER_USER:-root}
    image: pawsmovin
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - post_data:/app/public/data
      - ./docker/cron_tasks/daily:/etc/periodic/daily
    environment:
      <<: *common-env
      RAILS_ENV: development
      DD_AGENT_HOST: datadog-agent
      DD_SERVICE: ${DD_SERVICE:-}
      DD_ENV: ${DD_ENV:-}
    depends_on:
      <<: *common-depends-on
      autocompleted:
        condition: service_started
      iqdb:
        condition: service_started
      recommender:
        condition: service_started
      reports:
        condition: service_started
    tty: true

  # For this service to work properly, it must be accessible from /tags/autocomplete.json on the same url as the primary app
  autocompleted:
    image: ghcr.io/e621ng/autocompleted:8807bc8658f594cd0de04de1c272c3a2f917fc48
    command: /app/autocompleted
    environment:
      SERVER_ADDR: autocompleted:8118
      PG__USER: pawsmovin
      PG__HOST: postgres
      PG__PORT: 5432
      PG__DBNAME: pawsmovin_development
      PG__POOL__MAX_SIZE: 1

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./public:/app/public
      - post_data:/app/public/data
      - ./docker/default.conf.template:/etc/nginx/templates/default.conf.template
    environment:
      <<: *common-env
      NGINX_PORT: ${EXPOSED_SERVER_PORT:-3001}
    depends_on:
      - autocompleted
      - pawsmovin
      - reports
    ports:
      - "${EXPOSED_SERVER_PORT:-3001}:${EXPOSED_SERVER_PORT:-3001}"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=pawsmovin
      - POSTGRES_DB=pawsmovin_development
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${EXPOSED_POSTGRES_PORT:-34518}:5432"

  redis:
    image: redis:7.0.10-alpine
    command: redis-server --save 10 1 --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - "${EXPOSED_REDIS_PORT:-34519}:6379"

  memcached:
    image: memcached:1.5.22-alpine

  opensearch:
    image: opensearchproject/opensearch:2.13.0
    environment:
      - discovery.type=single-node
      - logger.level=WARN
      - DISABLE_SECURITY_PLUGIN=true
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      interval: 5s
      timeout: 2s
      retries: 12
      test: curl "opensearch:9200/_cluster/health?wait_for_status=yellow&timeout=2s"

  iqdb:
    image: ghcr.io/e621ng/iqdb:ad5e363879d4e4b80a0821253ae610b7859c5d32
    command: iqdb http 0.0.0.0 5588 /iqdb/iqdb.db
    volumes:
      - iqdb_data:/iqdb

  datadog-agent:
    image: datadog/agent:7.52.0
    environment:
      DD_API_KEY: ${DD_API_KEY:-}
      DD_SITE: ${DD_SITE:-us5.datadoghq.com}
      DD_HOSTNAME: datadog-agent
      DD_LOG_LEVEL: WARN
      DD_APM_NON_LOCAL_TRAFFIC: true
    profiles:
      - datadog

  recommender:
    image: ghcr.io/pawsmovin/recommender:9637a67bd3bca07519658fc0335bf55fe4644534
    volumes:
      - recommender_data:/recommender/data
    environment:
      - DATABASE_URL=postgres://pawsmovin:@postgres/pawsmovin_development
      - OPENBLAS_NUM_THREADS=1
      - TRAINING_THREADS=4

  # By default, this is bound to /reports on the same url as the primary app for external access
  # To change this, set the PAWSMOVIN_REPORTS_SERVER env variable
  # For internal access, change the PAWSMOVIN_REPORTS_SERVER_INTERNAL env varable (defaults to http://reports:3000)
  reports:
    image: ghcr.io/pawsmovin/reports:b110f35e3b9baed09e0e3b99382108751545f767
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REPORTS_REDIS_URL=redis://redis
      - REPORTS_REPORT_KEY=super_secret_key_for_reports_signature
    ports:
      - "${EXPOSED_REPORTS_PORT:-3002}:3000"

  # Discord integration

  discordbot:
    image: ghcr.io/pawsmovin/discordbot:0dd23de434763af44c37ba61c6d9ff14b48fc7a8
    environment:
      DISCORD_TOKEN: ${DISCORDBOT_DISCORD_TOKEN-}
      DISCORD_ID: ${DISCORDBOT_DISCORD_ID-}
      DISCORD_SECRET: ${DISCORDBOT_DISCORD_SECRET-}
      REDIS_URL: redis://redis/1
      REDIS_CHANNELS_TICKETS: ticket_updates
      GUILD_ID: ${DISCORDBOT_GUILD_ID-}
      ADMIN_ROLE: ${DISCORDBOT_ADMIN_ROLE-}
      JOINER_PORT: ${JOINER_PORT:-3003}
      JOINER_URL: http://localhost:${EXPOSED_JOINER_PORT:-3003}
      JOINER_SECRET: ${PAWSMOVIN_DISCORD_SECRET-}
      JOINER_CHANNEL_ID: ${DISCORDBOT_JOINER_CHANNEL_ID-}
      AUDIT_LOG_CHANNEL_ID: ${DISCORDBOT_AUDIT_LOG_CHANNEL_ID-}
      EVENT_CHANNEL_ID: ${DISCORDBOT_EVENT_CHANNEL_ID-}
      TICKET_CHANNEL_ID: ${DISCORDBOT_TICKET_CHANNEL_ID-}
      BASE_URL: http://localhost:${EXPOSED_SERVER_PORT:-3001}
      FETCH_URL: http://nginx:${EXPOSED_SERVER_PORT:-3001}
      CDN_HOST: localhost:${EXPOSED_SERVER_PORT:-3001}
      BLACKLISTED_TAGS: ${DISCORDBOT_BLACKLISTED_TAGS:-}
      STAFF_CATEGORIES: ${DISCORDBOT_STAFF_CATEGORIES:-}
      SAFE_CHANNELS: ${DISCORDBOT_SAFE_CHANNELS:-}
      ENCRYPTION_KEY: ${DISCORDBOT_ENCRYPTION_KEY:-o7SrC4IZKDeX4WOC4Zulp2xhQxNM1tvkHmi4Wh8AEqbjdCR3vFQplQCPE6FlnisLCLbs3Axeg0B96hYr}
      ENCRYPTION_SALT: ${DISCORDBOT_ENCRYPTION_SALT:-apPyQsjNgUOIiAV62Evly0qgJATdocWwKT0vsdow}
    ports:
      - "${EXPOSED_JOINER_PORT:-${JOINER_PORT-}}:${JOINER_PORT:-3003}"
    profiles:
      - discord

  # Useful for development

  tests:
    image: pawsmovin
    environment:
      <<: *common-env
      RAILS_ENV: test
    volumes:
      - .:/app
      - ./docker/local_config.rb:/app/config/local_config.rb
      - node_modules:/app/node_modules
    depends_on:
      <<: *common-depends-on
    entrypoint: bundle exec rails test
    profiles:
      - tests

  rubocop:
    image: pawsmovin
    volumes:
      - .:/app
      - rubocop_cache:/rubocop_cache
    entrypoint: bundle exec rubocop --cache-root /rubocop_cache
    profiles:
      - rubocop

volumes:
  post_data:
  iqdb_data:
  opensearch_data:
  db_data:
  redis_data:
  node_modules:
  rubocop_cache:
  discord_joiner_data:
  recommender_data:

networks:
  default:
    driver: bridge
    ipam:
      driver: default
    driver_opts:
      com.docker.network.bridge.name: br-pawsmovin
